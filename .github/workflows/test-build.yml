name: Test and build
on:
  push:
    branches:
      - "main"
    tags:
      - '*'
  pull_request:
    branches:
      - "main"
jobs:
  tests:
    name: Test k8s ${{ matrix.k8s_version }} on os ${{matrix.os}} - go version ${{ matrix.go_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go_version: ['1.20']
        os: [ubuntu-latest]
        k8s_version:
          - 'v1.27'
          - 'v1.26'
          - 'v1.25'
    steps:
      - uses: actions/checkout@v3
      - name: Use golang ${{ matrix.go_version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go_version }}
      - name: docker version
        run: docker version
      - name: Go version
        run: go version
      - name: Go get dependencies
        run: go get -v -t -d ./...
      - name: Run tests with coverage
        run: make coverage
      - name: Vet and Build
        run: make

  docker-build:
    name: Build docker
    needs: [tests]
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/davidebianchi/echo-service-operator
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=semver,pattern={{version}}
          flavor: |
            latest=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache build
        uses: actions/cache@v3
        with:
          path: ${{ env.context }}build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: '${{ env.context }}'
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
